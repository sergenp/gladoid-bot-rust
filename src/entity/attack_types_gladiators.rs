//! SeaORM Entity. Generated by sea-orm-codegen 0.9.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "attack_types_gladiators")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub attack_type_id: i32,
    pub gladiator_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::gladiator::Entity",
        from = "Column::GladiatorId",
        to = "super::gladiator::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    Gladiator,
    #[sea_orm(
        belongs_to = "super::attack_type::Entity",
        from = "Column::AttackTypeId",
        to = "super::attack_type::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    AttackType,
}

impl Related<super::gladiator::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Gladiator.def()
    }
}

impl Related<super::attack_type::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::AttackType.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
